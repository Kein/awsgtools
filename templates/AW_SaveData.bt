//---------------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: AW_SaveData.bt
//   Authors: Kein, apocalyptech
//   Version: 0.3
//   Purpose: Parser for Animal Well save game data
//  Category: Game
// File Mask: *.sav
//   History: 
//     0.1a  - Initial release
//     0.3   - Added most of the basic data. Ready to use.
//     0.3.1 - Added Stopwatch, Pedometer, Cring. Minimap and pencil data.
//             Renamed a few things.
//---------------------------------------------------------

// =====================
// DEFINITIONS
// =====================

enum <ubyte> ControllerStyle
{
    PS5=0,
    Xbox,
    Nintendo,
    Keyboard
};

enum <ubyte> Graphics
{
    Good=0,
    Better,
    Best
};

enum <ubyte> Language
{
    English=0,
    Spanish,
    French,
    Italian,
    German,
    Chinese,
    Korean,
    Japanese,
    Portuguese,
    Ukrainian,
    Russian
};

typedef struct {
    uint32 Achievement1 : 1;
    uint32 Achievement2 : 1;
    uint32 Achievement3 : 1;
    uint32 Achievement4 : 1;
    uint32 Achievement5 : 1;
    uint32 Achievement6 : 1;
    uint32 Achievement7 : 1;
    uint32 SECRET_RABBIT : 1;
    uint32 Achievement9 : 1;
    uint32 Achievement10 : 1;
    uint32 Achievement11 : 1;
    uint32 Achievement12 : 1;
    uint32 Achievement13 : 1;
    uint32 Achievement14 : 1;
    uint32 Achievement15 : 1;
    uint32 Achievement16 : 1;
    uint32 Achievement17 : 1;
    uint32 Achievement18 : 1;
    uint32 SECRET_EGG : 1;
    uint32 Achievement20 : 1;
    uint32 Achievement21 : 1;
    uint32 Achievement22 : 1;
    uint32 Achievement23 : 1;
    uint32 Achievement24 : 1;
    uint32 Achievement25 : 1;
    uint32 Achievement26 : 1;
    uint32 Achievement27 : 1;
    uint32 Achievement28 : 1;
    uint32 Achievement29 : 1;
    uint32 Achievement30 : 1;
    uint32 Achievement31 : 1;
    uint32 Achievement32 : 1;
} AchievementData;


typedef struct { // 0x30 | more?
    uint16 room_0406_0; // 0x00 (0x2)
    uint16 room_0406_1; // 0x02 (0x2)
    uint16 room_0508_0; // 0x04 (0x2)
    uint16 room_0605_0; // 0x06 (0x2)
    uint16 unknown_08;  // 0x08 (0x2)
    uint16 unknown_0A;  // 0x0A (0x2)
    uint16 room_0907_0; // 0x0C (0x2)
    uint16 unknown_0E;  // 0x0E (0x2)
    uint16 unknown_10;  // 0x10 (0x2)
    uint16 unknown_12;  // 0x12 (0x2)
    uint16 room_1310_0; // 0x14 (0x2)
    uint16 room_1312_0; // 0x16 (0x2)
    uint16 room_1312_1; // 0x18 (0x2)
    uint16 room_1504_0; // 0x1A (0x2)
    uint16 room_1504_1; // 0x1C (0x2)
    uint16 room_1504_2; // 0x1E (0x2)
    uint16 room_1702_0; // 0x20 (0x2)
    uint16 room_1702_1; // 0x22 (0x2)
    uint16 unknown_24;  // 0x24 (0x2)
    uint16 unknown_26;  // 0x26 (0x2)
    uint16 room_1808_0; // 0x28 (0x2)
    uint16 unknown_2A;  // 0x2A (0x2)
    uint16 unknown_2C;  // 0x2C (0x2)
    uint16 unknown_2E;  // 0x2E (0x2)
} Cranks <comment="Room coordinates are yx_id not xy_id">; 

typedef struct { 
    uint64 Door_00_0 : 1; // 0x0
    uint64 Door_00_1 : 1; // 0x0
    uint64 Door_00_2 : 1; // 0x0
    uint64 Door_00_3 : 1; // 0x0
    uint64 Door_00_4 : 1; // 0x0
    uint64 Door_00_5 : 1; // 0x0
    uint64 Door_00_6 : 1; // 0x0
    uint64 Door_00_7 : 1; // 0x0
    uint64 Door_01_0 : 1; // 0x1
    uint64 Door_01_1 : 1; // 0x1
    uint64 Door_01_2 : 1; // 0x1
    uint64 Door_01_3 : 1; // 0x1
    uint64 Door_01_4 : 1; // 0x1
    uint64 Door_01_5 : 1; // 0x1
    uint64 Door_01_6 : 1; // 0x1
    uint64 Door_01_7 : 1; // 0x1
    uint64 Door_02_0 : 1; // 0x2
    uint64 Door_02_1 : 1; // 0x2
    uint64 Door_02_2 : 1; // 0x2
    uint64 Door_02_3 : 1; // 0x2
    uint64 Door_02_4 : 1; // 0x2
    uint64 Door_02_5 : 1; // 0x2
    uint64 Door_02_6 : 1; // 0x2
    uint64 Door_02_7 : 1; // 0x2
    uint64 Door_03_0 : 1; // 0x3
    uint64 Door_03_1 : 1; // 0x3
    uint64 Door_03_2 : 1; // 0x3
    uint64 Door_03_3 : 1; // 0x3
    uint64 Door_03_4 : 1; // 0x3
    uint64 Door_03_5 : 1; // 0x3
    uint64 Door_03_6 : 1; // 0x3
    uint64 Door_03_7 : 1; // 0x3
    uint64 Door_04_0 : 1; // 0x4
    uint64 Door_04_1 : 1; // 0x4
    uint64 Door_04_2 : 1; // 0x4
    uint64 Door_04_3 : 1; // 0x4
    uint64 Door_04_4 : 1; // 0x4
    uint64 Door_04_5 : 1; // 0x4
    uint64 Door_04_6 : 1; // 0x4
    uint64 Door_04_7 : 1; // 0x4
    uint64 Door_05_0 : 1; // 0x5
    uint64 Door_05_1 : 1; // 0x5
    uint64 Door_05_2 : 1; // 0x5
    uint64 Door_05_3 : 1; // 0x5
    uint64 Door_05_4 : 1; // 0x5
    uint64 Door_05_5 : 1; // 0x5
    uint64 Door_05_6 : 1; // 0x5
    uint64 Door_05_7 : 1; // 0x5
    uint64 Door_06_0 : 1; // 0x6
    uint64 Door_06_1 : 1; // 0x6
    uint64 Door_06_2 : 1; // 0x6
    uint64 Door_06_3 : 1; // 0x6
    uint64 Door_06_4 : 1; // 0x6
    uint64 Door_06_5 : 1; // 0x6
    uint64 Door_06_6 : 1; // 0x6
    uint64 Door_06_7 : 1; // 0x6
    uint64 Door_07_0 : 1; // 0x7
    uint64 Door_07_1 : 1; // 0x7
    uint64 Door_07_2 : 1; // 0x7
    uint64 Door_07_3 : 1; // 0x7
    uint64 Door_07_4 : 1; // 0x7
    uint64 Door_07_5 : 1; // 0x7
    uint64 Door_07_6 : 1; // 0x7
    uint64 Door_07_7 : 1; // 0x7
    uint64 Door_08_0 : 1; // 0x8
    uint64 Door_08_1 : 1; // 0x8
    uint64 Door_08_2 : 1; // 0x8
    uint64 Door_08_3 : 1; // 0x8
    uint64 Door_08_4 : 1; // 0x8
    uint64 Door_08_5 : 1; // 0x8
    uint64 Door_08_6 : 1; // 0x8
    uint64 Door_08_7 : 1; // 0x8
    uint64 Door_09_0 : 1; // 0x9
    uint64 Door_09_1 : 1; // 0x9
    uint64 Door_09_2 : 1; // 0x9
    uint64 Door_09_3 : 1; // 0x9
    uint64 Door_09_4 : 1; // 0x9
    uint64 Door_09_5 : 1; // 0x9
    uint64 Door_09_6 : 1; // 0x9
    uint64 Door_09_7 : 1; // 0x9
    uint64 Door_0A_0 : 1; // 0xA
    uint64 Door_0A_1 : 1; // 0xA
    uint64 Door_0A_2 : 1; // 0xA
    uint64 Door_0A_3 : 1; // 0xA
    uint64 Door_0A_4 : 1; // 0xA
    uint64 Door_0A_5 : 1; // 0xA
    uint64 Door_0A_6 : 1; // 0xA
    uint64 Door_0A_7 : 1; // 0xA
    uint64 Door_0B_0 : 1; // 0xB
    uint64 Door_0B_1 : 1; // 0xB
    uint64 Door_0B_2 : 1; // 0xB
    uint64 Door_0B_3 : 1; // 0xB
    uint64 Door_0B_4 : 1; // 0xB
    uint64 Door_0B_5 : 1; // 0xB
    uint64 Door_0B_6 : 1; // 0xB
    uint64 Door_0B_7 : 1; // 0xB
    uint64 Door_0C_0 : 1; // 0xC
    uint64 Door_0C_1 : 1; // 0xC
    uint64 Door_0C_2 : 1; // 0xC
    uint64 Door_0C_3 : 1; // 0xC
    uint64 Door_0C_4 : 1; // 0xC
    uint64 Door_0C_5 : 1; // 0xC
    uint64 Door_0C_6 : 1; // 0xC
    uint64 Door_0C_7 : 1; // 0xC
    uint64 Door_0D_0 : 1; // 0xD
    uint64 Door_0D_1 : 1; // 0xD
    uint64 Door_0D_2 : 1; // 0xD
    uint64 Door_0D_3 : 1; // 0xD
    uint64 Door_0D_4 : 1; // 0xD
    uint64 Door_0D_5 : 1; // 0xD
    uint64 Door_0D_6 : 1; // 0xD
    uint64 Door_0D_7 : 1; // 0xD
    uint64 Door_0E_0 : 1; // 0xE
    uint64 Door_0E_1 : 1; // 0xE
    uint64 Door_0E_2 : 1; // 0xE
    uint64 Door_0E_3 : 1; // 0xE
    uint64 Door_0E_4 : 1; // 0xE
    uint64 Door_0E_5 : 1; // 0xE
    uint64 Door_0E_6 : 1; // 0xE
    uint64 Door_0E_7 : 1; // 0xE
    uint64 Door_0F_0 : 1; // 0xF
    uint64 Door_0F_1 : 1; // 0xF
    uint64 Door_0F_2 : 1; // 0xF
    uint64 Door_0F_3 : 1; // 0xF
    uint64 Door_0F_4 : 1; // 0xF
    uint64 Door_0F_5 : 1; // 0xF
    uint64 Door_0F_6 : 1; // 0xF
    uint64 Door_0F_7 : 1; // 0xF
} KeyDoorData <comment="Orderng unknown">;


typedef struct { // 0x08 | more?
    ubyte unknown_00;  // 0x0 (0x1)
    ubyte room_1504_0; // 0x1 (0x1) | incorrect?
    ubyte room_1504_1; // 0x2 (0x1) | would make this the 0th one instead
    ubyte room_1504_2; // 0x3 (0x1)
    ubyte room_1504_3; // 0x4 (0x1)
} FillData <comment="Room coordinates are yx_id not xy_id">;

typedef struct {
    uint64 room_0403_0 : 1;
    uint64 room_0404_0 : 1;
    uint64 room_0407_0 : 1;
    uint64 room_0411_0 : 1;
    uint64 unknown_00_4 : 1;
    uint64 room_0414_0 : 1;
    uint64 room_0502_0 : 1;
    uint64 room_0517_0 : 1;

    uint64 unknown_01_0 : 1;
    uint64 room_0603_0 : 1;
    uint64 unknown_01_2 : 1;
    uint64 room_0608_0 : 1 <comment="match">;
    uint64 room_0608_1 : 1;
    uint64 room_0613_0 : 1 <comment="match">;
    uint64 room_0617_0 : 1;
    uint64 unknown_01_7 : 1;

    uint64 room_0703_0 : 1 <comment="key">;
    uint64 room_0704_0 : 1;
    uint64 unknown_02_2 : 1;
    uint64 room_0710_0 : 1 <comment="match">;
    uint64 room_0710_1 : 1;
    uint64 room_0711_0 : 1 <comment="match">;
    uint64 room_0711_1 : 1;
    uint64 room_0717_0 : 1;

    uint64 room_0802_0 : 1;
    uint64 room_0803_0 : 1;
    uint64 unknown_03_2 : 1;
    uint64 room_0808_0 : 1;
    uint64 room_0810_0 : 1;
    uint64 room_0811_0 : 1;
    uint64 unknown_03_6 : 1 <comment="slink">;
    uint64 room_0814_0 : 1;

    uint64 room_0814_1 : 1;
    uint64 room_0815_0 : 1;
    uint64 room_0815_1 : 1 <comment="key">;
    uint64 room_0902_0 : 1;
    uint64 room_0903_0 : 1;
    uint64 unknown_04_5 : 1;
    uint64 room_0910_0 : 1 <comment="match">;
    uint64 unknown_04_7 : 1;

    uint64 room_0912_0 : 1;
    uint64 room_0913_0 : 1;
    uint64 room_0913_1 : 1;
    uint64 room_1002_0 : 1;
    uint64 room_1003_0 : 1;
    uint64 room_1006_0 : 1;
    uint64 room_1007_0 : 1;
    uint64 room_1008_0 : 1;

    uint64 room_1008_1 : 1;
    uint64 room_1008_2 : 1;
    uint64 room_1009_0 : 1;
    uint64 room_1010_0 : 1;
    uint64 room_1010_1 : 1;
    uint64 room_1015_0 : 1;
    uint64 room_1017_0 : 1 <comment="key">;
    uint64 room_1104_0 : 1;

    uint64 room_1108_0 : 1 <comment="match">;
    uint64 room_1109_0 : 1;
    uint64 room_1205_0 : 1;
    uint64 room_1208_0 : 1;
    uint64 room_1210_0 : 1;
    uint64 room_1211_0 : 1;
    uint64 room_1213_0 : 1 <comment="key">;
    uint64 room_1214_0 : 1 <comment="match">;

    uint64 room_1214_1 : 1;
    uint64 room_1217_0 : 1;
    uint64 room_1302_0 : 1;
    uint64 room_1303_0 : 1;
    uint64 unknown_08_4 : 1 <comment="b. wand">;
    uint64 room_1305_0 : 1;
    uint64 room_1307_0 : 1 <comment="match">;
    uint64 unknown_08_7 : 1 <comment="dream egg">;

    uint64 room_1314_0 : 1;
    uint64 room_1317_0 : 1;
    uint64 room_1409_0 : 1;
    uint64 room_1411_0 : 1;
    uint64 room_1412_0 : 1;
    uint64 room_1415_0 : 1;
    uint64 room_1417_0 : 1;
    uint64 unknown_09_7 : 1;

    uint64 room_1506_0 : 1;
    uint64 room_1512_0 : 1 <comment="match">;
    uint64 room_1513_0 : 1 <comment="key">;
    uint64 room_1515_0 : 1 <comment="key">;
    uint64 unknown_0A_4 : 1;
    uint64 unknown_0A_5 : 1;
    uint64 room_1608_0 : 1;
    uint64 room_1609_0 : 1;

    uint64 room_1614_0 : 1;
    uint64 unknown_0B_1 : 1;
    uint64 unknown_0B_2 : 1;
    uint64 room_1713_0 : 1;
    uint64 room_1714_0 : 1;
    uint64 room_1715_0 : 1;
    uint64 room_1716_0 : 1;
    uint64 unknown_0B_7 : 1;

    uint64 unknown_0C_0 : 1;
    uint64 room_1814_0 : 1;
    uint64 unknown_0C_2 : 1;
    uint64 unknown_0C_3 : 1;
    uint64 room_1908_0 : 1;
} ChestData <comment="Room coordinates are yx_id not xy_id">;


typedef struct {
    uint64 room_0403_0 : 1;
    uint64 room_0410_0 : 1;
    uint64 room_0412_0 : 1;
    uint64 room_0413_0 : 1;
    uint64 room_0414_0 : 1;
    uint64 room_0414_1 : 1;
    uint64 room_0416_0 : 1;
    uint64 room_0510_0 : 1;

    uint64 room_0512_0 : 1;
    uint64 room_0514_0 : 1;
    uint64 room_0515_0 : 1;
    uint64 unknown_01_3 : 1;
    uint64 room_0607_0 : 1;
    uint64 room_0609_0 : 1;
    uint64 room_0610_0 : 1;
    uint64 room_0611_0 : 1;

    uint64 room_0611_1 : 1;
    uint64 room_0612_0 : 1;
    uint64 room_0613_0 : 1;
    uint64 room_0614_0 : 1;
    uint64 room_0615_0 : 1;
    uint64 room_0615_1 : 1;
    uint64 room_0616_0 : 1;
    uint64 room_0703_0 : 1;

    uint64 room_0704_0 : 1;
    uint64 room_0705_0 : 1;
    uint64 room_0706_0 : 1;
    uint64 room_0713_0 : 1;
    uint64 room_0716_0 : 1;
    uint64 room_0717_0 : 1;
    uint64 room_0803_0 : 1;
    uint64 room_0808_0 : 1;

    uint64 room_0810_0 : 1;
    uint64 room_0811_0 : 1;
    uint64 room_0813_0 : 1;
    uint64 room_0813_1 : 1;
    uint64 room_0814_0 : 1;
    uint64 room_0814_1 : 1;
    uint64 room_0814_2 : 1;
    uint64 room_0817_0 : 1;

    uint64 room_0906_0 : 1;
    uint64 room_0907_0 : 1;
    uint64 room_0910_0 : 1;
    uint64 room_0913_0 : 1;
    uint64 room_0913_1 : 1;
    uint64 room_0914_0 : 1;
    uint64 room_0916_0 : 1;
    uint64 room_0917_0 : 1;

    uint64 room_1003_0 : 1;
    uint64 room_1005_0 : 1;
    uint64 room_1006_0 : 1;
    uint64 room_1013_0 : 1;
    uint64 room_1105_0 : 1;
    uint64 room_1107_0 : 1;
    uint64 room_1114_0 : 1;
    uint64 room_1115_0 : 1;

    uint64 room_1213_0 : 1;
    uint64 room_1304_0 : 1;
    uint64 room_1307_0 : 1;
    uint64 room_1313_0 : 1;
    uint64 room_1314_0 : 1;
    uint64 room_1404_0 : 1;
    uint64 room_1405_0 : 1;
    uint64 room_1410_0 : 1;

    uint64 room_1411_0 : 1;
    uint64 room_1413_0 : 1;
    uint64 room_1414_0 : 1;
    uint64 room_1415_0 : 1;
    uint64 unknown_08_4 : 1;
    uint64 room_1504_0 : 1;
    uint64 room_1504_1 : 1;
    uint64 room_1505_0 : 1;

    uint64 room_1510_0 : 1;
    uint64 room_1515_0 : 1;
    uint64 room_1516_0 : 1;
    uint64 room_1516_1 : 1;
    uint64 room_1517_0 : 1;
    uint64 unknown_09_5 : 1;
    uint64 unknown_09_6 : 1;
    uint64 unknown_09_7 : 1;

    uint64 room_1610_0 : 1;
    uint64 room_1613_0 : 1;
    uint64 room_1615_0 : 1;
    uint64 room_1615_1 : 1;
    uint64 unknown_0A_4 : 1;
    uint64 room_1709_0 : 1;
    uint64 room_1715_0 : 1;
    uint64 room_1810_0 : 1;

    uint64 room_1813_0 : 1;
    uint64 room_1816_0 : 1;
    uint64 room_1817_0 : 1;
    uint64 unknown_0B_3 : 1;
    uint64 unknown_0B_4 : 1;
    uint64 room_1916_0 : 1;
} ButtonDoorsData <comment="Room coordinates are yx_id not xy_id">;

typedef struct { 
    uint64 room_0403_0 : 1;  
    uint64 room_0413_0 : 1;  
    uint64 room_0413_1 : 1;  
    uint64 room_0414_0 : 1;  
    uint64 room_0416_0 : 1;  
    uint64 room_0510_0 : 1;  
    uint64 room_0512_0 : 1;  
    uint64 room_0514_0 : 1;  

    uint64 room_0514_1 : 1;  
    uint64 room_0514_2 : 1;  
    uint64 room_0515_0 : 1;  
    uint64 room_0515_1 : 1;  
    uint64 unknown_01_4 : 1; 
    uint64 room_0607_0 : 1;  
    uint64 room_0609_0 : 1;  
    uint64 room_0610_0 : 1;  

    uint64 room_0611_0 : 1;  
    uint64 room_0613_0 : 1;  
    uint64 room_0614_0 : 1;  
    uint64 room_0615_0 : 1;  
    uint64 room_0616_0 : 1;  
    uint64 room_0616_1 : 1;  
    uint64 room_0616_2 : 1;  
    uint64 room_0703_0 : 1;  

    uint64 room_0703_1 : 1;  
    uint64 room_0703_2 : 1;  
    uint64 room_0703_3 : 1;  
    uint64 room_0704_0 : 1;  
    uint64 room_0705_0 : 1;  
    uint64 room_0706_0 : 1;  
    uint64 room_0713_0 : 1;  
    uint64 room_0716_0 : 1;  

    uint64 room_0717_0 : 1;  
    uint64 room_0717_1 : 1;  
    uint64 room_0717_2 : 1;  
    uint64 room_0808_0 : 1;  
    uint64 room_0810_0 : 1;  
    uint64 room_0811_0 : 1;  
    uint64 room_0814_0 : 1;  
    uint64 room_0816_0 : 1;  

    uint64 room_0816_1 : 1;  
    uint64 room_0817_0 : 1;  
    uint64 room_0817_1 : 1;  
    uint64 room_0817_2 : 1;  
    uint64 room_0906_0 : 1;  
    uint64 room_0906_1 : 1;  
    uint64 room_0907_0 : 1;  
    uint64 room_0907_1 : 1;  

    uint64 room_0907_2 : 1;  
    uint64 room_0910_0 : 1;  
    uint64 room_0913_0 : 1;  
    uint64 room_0914_0 : 1;  
    uint64 room_0914_1 : 1;  
    uint64 room_0914_2 : 1;  
    uint64 room_0916_0 : 1;  
    uint64 room_0917_0 : 1;  

    uint64 room_1003_0 : 1;  
    uint64 room_1003_1 : 1;  
    uint64 room_1003_2 : 1;  
    uint64 room_1005_0 : 1;  
    uint64 room_1006_0 : 1;  
    uint64 room_1105_0 : 1;  
    uint64 room_1105_1 : 1;  
    uint64 room_1105_2 : 1;  

    uint64 room_1105_3 : 1;  
    uint64 room_1114_0 : 1;  
    uint64 room_1115_0 : 1;  
    uint64 room_1213_0 : 1;  
    uint64 room_1304_0 : 1;  
    uint64 room_1304_1 : 1;  
    uint64 room_1304_2 : 1;  
    uint64 room_1307_0 : 1;  

    uint64 room_1307_1 : 1;  
    uint64 room_1307_2 : 1;  
    uint64 room_1313_0 : 1;  
    uint64 room_1314_0 : 1;  
    uint64 room_1404_0 : 1;  
    uint64 room_1411_0 : 1;  
    uint64 room_1413_0 : 1;  
    uint64 room_1413_1 : 1;  

    uint64 room_1413_2 : 1;  
    uint64 room_1413_3 : 1;  
    uint64 room_1414_0 : 1;  
    uint64 room_1415_0 : 1;  
    uint64 room_1415_1 : 1;  
    uint64 room_1415_2 : 1;  
    uint64 room_1503_0 : 1;  
    uint64 room_1503_1 : 1;  

    uint64 room_1503_2 : 1;  
    uint64 room_1503_3 : 1;  
    uint64 room_1505_0 : 1;  
    uint64 room_1510_0 : 1;  
    uint64 room_1510_1 : 1;  
    uint64 room_1510_2 : 1;  
    uint64 room_1515_0 : 1;  
    uint64 room_1516_0 : 1;  

    uint64 room_1517_0 : 1;  
    uint64 room_1603_0 : 1;  
    uint64 room_1603_1 : 1;  
    uint64 room_1603_2 : 1;  
    uint64 room_1603_3 : 1;  
    uint64 unknown_0C_4 : 1; 
    uint64 unknown_0C_5 : 1; 
    uint64 unknown_0C_6 : 1; 

    uint64 room_1610_0 : 1;  
    uint64 room_1613_0 : 1;  
    uint64 room_1613_1 : 1;  
    uint64 room_1613_2 : 1;  
    uint64 room_1613_3 : 1;  
    uint64 room_1709_0 : 1;  
    uint64 room_1809_0 : 1;  
    uint64 room_1809_1 : 1;  

    uint64 room_1809_2 : 1;  
    uint64 room_1809_3 : 1;  
    uint64 room_1810_0 : 1;  
    uint64 room_1811_0 : 1;  
    uint64 room_1811_1 : 1;  
    uint64 room_1811_2 : 1;  
    uint64 room_1811_3 : 1;  
    uint64 room_1813_0 : 1;  

    uint64 room_1813_1 : 1;  
    uint64 room_1813_2 : 1;  
    uint64 room_1816_0 : 1;  
    uint64 room_1816_1 : 1;  
    uint64 room_1816_2 : 1;  
    uint64 room_1817_0 : 1;  
    uint64 room_1817_1 : 1;  
    uint64 room_1817_2 : 1;  

    uint64 room_1817_3 : 1;  
    uint64 unknown_10_1 : 1; 
    uint64 unknown_10_2 : 1; 
    uint64 unknown_10_3 : 1; 
    uint64 room_1913_0 : 1;  
    uint64 room_1913_1 : 1;  
} YellowButtonData <comment="Room coordinates are yx_id not xy_id">;


typedef struct {
    uint64 room_0412_0 : 1;
    uint64 room_0412_1 : 1;
    uint64 room_0412_2 : 1;
    uint64 room_0412_3 : 1;
    uint64 room_0612_0 : 1;
    uint64 room_0612_1 : 1;
    uint64 unknown_00_6 : 1;
    uint64 unknown_00_7 : 1;

    uint64 room_0813_0 : 1;
    uint64 room_0813_1 : 1;
    uint64 room_1013_0 : 1;
    uint64 room_1013_1 : 1;
    uint64 room_1405_0 : 1;
    uint64 room_1405_1 : 1;
    uint64 room_1405_2 : 1;
    uint64 room_1410_0 : 1;

    uint64 room_1410_1 : 1;
    uint64 room_1410_2 : 1;
    uint64 room_1615_0 : 1;
    uint64 room_1615_1 : 1;
    uint64 unknown_02_4 : 1;
    uint64 unknown_02_5 : 1;
    uint64 room_1913_0 : 1;
    uint64 room_1916_0 : 1;

    uint64 room_1916_1 : 1;
    uint64 room_1916_2 : 1;
    uint64 room_1916_3 : 1;
} PurpleButtonData <comment="Room coordinates are yx_id not xy_id">;


typedef struct {
    uint64 room_1002_0 : 1;
    uint64 room_1102_0 : 1;
    uint64 room_1105_0 : 1;
    uint64 room_1302_0 : 1;
} GreenButtonData <comment="Room coordinates are yx_id not xy_id">;

typedef struct {
    uint64 unknown_00_0 : 1;
    uint64 unknown_00_1 : 1;
    uint64 room_0404_0 : 1;
    uint64 unknown_00_3 : 1;
    uint64 room_0407_0 : 1;
    uint64 room_0407_1 : 1;
    uint64 room_0408_0 : 1;
    uint64 room_0410_0 : 1;

    uint64 room_0412_0 : 1;
    uint64 room_0412_1 : 1;
    uint64 room_0416_0 : 1;
    uint64 room_0504_0 : 1;
    uint64 room_0505_0 : 1;
    uint64 room_0510_0 : 1;
    uint64 room_0511_0 : 1;
    uint64 unknown_01_7 : 1;

    uint64 room_0513_0 : 1;
    uint64 room_0604_0 : 1;
    uint64 room_0606_0 : 1;
    uint64 room_0608_0 : 1;
    uint64 room_0609_0 : 1;
    uint64 room_0609_1 : 1;
    uint64 room_0611_0 : 1;
    uint64 room_0613_0 : 1;

    uint64 room_0617_0 : 1;
    uint64 unknown_03_1 : 1;
    uint64 unknown_03_2 : 1;
    uint64 unknown_03_3 : 1;
    uint64 room_0707_0 : 1;
    uint64 room_0712_0 : 1;
    uint64 room_0714_0 : 1;
    uint64 unknown_03_7 : 1;

    uint64 unknown_04_0 : 1;
    uint64 room_0716_0 : 1;
    uint64 room_0716_1 : 1;
    uint64 room_0802_0 : 1;
    uint64 room_0804_0 : 1;
    uint64 room_0805_0 : 1;
    uint64 room_0807_0 : 1;
    uint64 room_0810_0 : 1;

    uint64 room_0812_0 : 1;
    uint64 room_0814_0 : 1;
    uint64 room_0906_0 : 1;
    uint64 room_0910_0 : 1;
    uint64 room_0910_1 : 1;
    uint64 room_0911_0 : 1;
    uint64 room_0911_1 : 1;
    uint64 room_0912_0 : 1;

    uint64 room_0913_0 : 1;
    uint64 room_0915_0 : 1;
    uint64 room_0915_1 : 1;
    uint64 room_0916_0 : 1;
    uint64 room_0917_0 : 1;
    uint64 room_1002_0 : 1;
    uint64 room_1002_1 : 1;
    uint64 room_1003_0 : 1;

    uint64 room_1004_0 : 1;
    uint64 room_1004_1 : 1;
    uint64 room_1005_0 : 1;
    uint64 room_1007_0 : 1;
    uint64 room_1015_0 : 1;
    uint64 room_1016_0 : 1;
    uint64 room_1017_0 : 1;
    uint64 room_1102_0 : 1;

    uint64 room_1103_0 : 1;
    uint64 room_1103_1 : 1;
    uint64 room_1110_0 : 1;
    uint64 room_1110_1 : 1;
    uint64 room_1114_0 : 1;
    uint64 room_1202_0 : 1;
    uint64 room_1203_0 : 1;
    uint64 room_1204_0 : 1;

    uint64 room_1204_1 : 1;
    uint64 unknown_09_1 : 1;
    uint64 room_1206_0 : 1;
    uint64 room_1208_0 : 1;
    uint64 room_1210_0 : 1;
    uint64 unknown_09_5 : 1;
    uint64 unknown_09_6 : 1;
    uint64 unknown_09_7 : 1;

    uint64 room_1216_0 : 1;
    uint64 room_1303_0 : 1;
    uint64 room_1305_0 : 1;
    uint64 room_1305_1 : 1;
    uint64 room_1313_0 : 1;
    uint64 room_1314_0 : 1;
    uint64 room_1314_1 : 1;
    uint64 room_1404_0 : 1;

    uint64 unknown_0B_0 : 1;
    uint64 room_1411_0 : 1;
    uint64 room_1412_0 : 1;
    uint64 room_1413_0 : 1;
    uint64 unknown_0B_4 : 1;
    uint64 room_1416_0 : 1;
    uint64 room_1514_0 : 1;
    uint64 room_1514_1 : 1;

    uint64 room_1515_0 : 1;
    uint64 room_1516_0 : 1;
    uint64 room_1517_0 : 1;
    uint64 room_1603_0 : 1;
    uint64 unknown_0C_4 : 1;
    uint64 room_1607_0 : 1;
    uint64 unknown_0C_6 : 1;
    uint64 room_1709_0 : 1;

    uint64 room_1710_0 : 1;
    uint64 unknown_0D_1 : 1;
    uint64 unknown_0D_2 : 1;
    uint64 unknown_0D_3 : 1;
    uint64 unknown_0D_4 : 1;
    uint64 unknown_0D_5 : 1;
    uint64 room_1816_0 : 1;
    uint64 room_1907_0 : 1;

    uint64 room_1916_0 : 1;
    uint64 unknown_0E_1 : 1;
    uint64 room_1917_0 : 1;
} FruitData <comment="Room coordinates are yx_id not xy_id">;


typedef struct {
    uint64 room_0405_0 : 1;
    uint64 room_0407_0 : 1;
    uint64 room_0408_0 : 1;
    uint64 room_0417_0 : 1;
    uint64 room_0509_0 : 1;
    uint64 room_0511_0 : 1;
    uint64 room_0603_0 : 1;
    uint64 room_0603_1 : 1;

    uint64 room_0603_2 : 1;
    uint64 unknown_01_1 : 1;
    uint64 room_0611_0 : 1;
    uint64 room_0611_1 : 1;
    uint64 unknown_01_4 : 1;
    uint64 room_0707_0 : 1;
    uint64 room_0710_0 : 1;
    uint64 unknown_01_7 : 1;

    uint64 room_0716_0 : 1;
    uint64 room_0805_0 : 1;
    uint64 room_0805_1 : 1;
    uint64 room_0805_2 : 1;
    uint64 room_0904_0 : 1;
    uint64 room_0905_0 : 1;
    uint64 room_0905_1 : 1;
    uint64 room_0905_2 : 1;

    uint64 room_0905_3 : 1;
    uint64 room_0906_0 : 1;
    uint64 room_0906_1 : 1;
    uint64 room_0911_0 : 1;
    uint64 room_0915_0 : 1;
    uint64 room_1014_0 : 1;
    uint64 room_1015_0 : 1;
    uint64 room_1112_0 : 1;

    uint64 room_1112_1 : 1;
    uint64 room_1210_0 : 1;
    uint64 room_1210_1 : 1;
    uint64 room_1214_0 : 1;
    uint64 room_1305_0 : 1;
    uint64 room_1306_0 : 1;
    uint64 room_1306_1 : 1;
    uint64 room_1306_2 : 1;

    uint64 room_1306_3 : 1;
    uint64 room_1311_0 : 1;
    uint64 room_1314_0 : 1;
    uint64 room_1406_0 : 1;
    uint64 room_1406_1 : 1;
    uint64 room_1406_2 : 1;
    uint64 room_1406_3 : 1;
    uint64 room_1407_0 : 1;

    uint64 room_1407_1 : 1;
    uint64 room_1407_2 : 1;
    uint64 room_1411_0 : 1;
    uint64 unknown_06_3 : 1;
    uint64 room_1511_0 : 1;
    uint64 room_1512_0 : 1;
    uint64 room_1513_0 : 1;
    uint64 unknown_06_7 : 1;

    uint64 unknown_07_0 : 1;
    uint64 room_1709_0 : 1;
    uint64 room_1710_0 : 1;
    uint64 unknown_07_3 : 1;
    uint64 room_1808_0 : 1;
    uint64 room_1809_0 : 1;
    uint64 room_1810_0 : 1;
    uint64 room_1810_1 : 1;
} FirecrackerData <comment="Room coordinates are yx_id not xy_id">;


typedef struct {
  uint64 room_0403_0 : 1  <comment="reference egg">;
  uint64 room_0404_0 : 1  <comment="brown egg">;
  uint64 room_0407_0 : 1  <comment="raw egg">;
  uint64 unknown_00_3 : 1 <comment="pickled egg">;
  uint64 room_0411_0 : 1  <comment="big egg">;
  uint64 room_0414_0 : 1  <comment="swan egg">;
  uint64 room_0502_0 : 1  <comment="forbidden egg">;
  uint64 room_0517_0 : 1  <comment="shadow egg">;

  uint64 unknown_01_0 : 1 <comment="?">;
  uint64 room_0603_0 : 1  <comment="egg as a service">;
  uint64 room_0608_0 : 1  <comment="depraved egg">;
  uint64 room_0617_0 : 1  <comment="chaos egg">;
  uint64 unknown_01_4 : 1 <comment="upside down egg">;
  uint64 unknown_01_5 : 1 <comment="?">;
  uint64 room_0710_0 : 1  <comment="sweet egg">;
  uint64 room_0711_0 : 1  <comment="chocolate egg">;

  uint64 room_0717_0 : 1  <comment="value egg">;
  uint64 room_0802_0 : 1  <comment="plant egg">;
  uint64 room_0803_0 : 1  <comment="red egg">;
  uint64 unknown_02_3 : 1 <comment="?">;
  uint64 room_0810_0 : 1  <comment="sour egg">;
  uint64 room_0811_0 : 1  <comment="post-modern egg">;
  uint64 room_0814_0 : 1  <comment="universal basic egg">;
  uint64 room_0814_1 : 1  <comment="laissez-faire egg">;

  uint64 room_0815_0 : 1  <comment="zen egg">;
  uint64 unknown_03_1 : 1 <comment="?">;
  uint64 room_0903_0 : 1  <comment="friendship egg">;
  uint64 room_0913_0 : 1  <comment="transcendental egg">;
  uint64 room_1002_0 : 1  <comment="ancient egg">;
  uint64 room_1003_0 : 1  <comment="magic egg">;
  uint64 room_1006_0 : 1  <comment="mystic egg">;

  uint64 room_1010_0 : 1  <comment="holiday egg">;
  uint64 room_1010_1 : 1  <comment="rain egg">;
  uint64 room_1015_0 : 1  <comment="razzle egg">;
  uint64 room_1104_0 : 1  <comment="dazzle egg">;
  uint64 room_1109_0 : 1  <comment="virtual egg">;
  uint64 room_1205_0 : 1  <comment="normal egg">;
  uint64 room_1208_0 : 1  <comment="great egg">;
  uint64 room_1210_0 : 1  <comment="gorgeous egg">;

  uint64 unknown_05_0 : 1 <comment="planet egg">;
  uint64 room_1217_0 : 1  <comment="moon egg">;
  uint64 room_1302_0 : 1  <comment="galaxy egg">;
  uint64 room_1303_0 : 1  <comment="sunset egg">;
  uint64 room_1305_0 : 1  <comment="goodnight egg">;
  uint64 room_1313_0 : 1  <comment="dream egg">;
  uint64 room_1314_0 : 1  <comment="travel egg">;
  uint64 room_1317_0 : 1  <comment="promise egg">;

  uint64 room_1409_0 : 1  <comment="ice egg">;
  uint64 room_1412_0 : 1  <comment="fire egg">;
  uint64 room_1415_0 : 1  <comment="bubble egg">;
  uint64 room_1417_0 : 1  <comment="desert egg">;
  uint64 room_1506_0 : 1  <comment="clover egg">;
  uint64 unknown_06_5 : 1 <comment="?">;
  uint64 unknown_06_6 : 1 <comment="?">;
  uint64 room_1609_0 : 1  <comment="iridescent egg">;

  uint64 room_1614_0 : 1  <comment="rust egg">;
  uint64 unknown_07_1 : 1 <comment="?">;
  uint64 room_1713_0 : 1  <comment="sapphire egg">;
  uint64 room_1714_0 : 1  <comment="ruby egg">;
  uint64 room_1715_0 : 1  <comment="jade egg">;
  uint64 room_1716_0 : 1  <comment="obsidian egg">;
  uint64 unknown_07_6 : 1 <comment="?">;
  uint64 unknown_07_7 : 1 <comment="?">;
} EggData  <comment="Room coordinates are yx_id not xy_id">;

typedef struct {
    uint32 room_0511_0 : 1;  
    uint32 room_0617_0 : 1;  
    uint32 room_0710_0 : 1;  
    uint32 room_0811_0 : 1;  
    uint32 unknown_00_4 : 1; 
    uint32 room_1116_0 : 1;  
    uint32 room_1117_0 : 1;  
    uint32 room_1117_1 : 1;  
    uint32 room_1414_0 : 1;  
    uint32 room_1516_0 : 1;  
} ExplosionData <comment="Room coordinates are yx_id not xy_id">;


typedef struct {
  uint32 room_0511_0 : 1; 
  uint32 room_0617_0 : 1; 
  uint32 room_0710_0 : 1; 
  uint32 room_1116_0 : 1; 
  uint32 room_1117_0 : 1; 
  uint32 room_1117_1 : 1; 
  uint32 room_1414_0 : 1; 
  uint32 room_1516_0 : 1; 
  uint32 room_1907_0 : 1; 
} DetonatorData <comment="Room coordinates are yx_id not xy_id">;


typedef struct {
    uint32 Bunny1 : 1;
    uint32 IllegallBunny1 : 1;
    uint32 Bunny3 : 1;
    uint32 Bunny4 : 1;
    uint32 Bunny5 : 1;
    uint32 IllegallBunny2 : 1;
    uint32 Bunny7 : 1;
    uint32 Jungle : 1;
    uint32 Bunny9 : 1;
    uint32 Bunny10 : 1;
    uint32 Bunny11 : 1;
    uint32 ChinChilla : 1;
    uint32 IllegallBunny3 : 1;
    uint32 IllegallBunny4 : 1;
    uint32 IllegallBunny5 : 1;
    uint32 Bunny16 : 1;
    uint32 IllegallBunny6 : 1;
    uint32 IllegallBunny7 : 1;
    uint32 IllegallBunny8 : 1;
    uint32 IllegallBunny9 : 1;
    uint32 IllegallBunny10 : 1;
    uint32 IllegallBunny11 : 1;
    uint32 Bunny23 : 1;
    uint32 IllegallBunny12 : 1;
    uint32 IllegallBunny13 : 1;
    uint32 Bunny26 : 1;
    uint32 IllegallBunny14 : 1;
    uint32 IllegallBunny15 : 1;
    uint32 Bunny29 : 1;
    uint32 IllegallBunny16 : 1;
    uint32 Bunny31 : 1;
    uint32 Bunny32 : 1;
} BunnyData;


typedef struct {
  uint64 room_0509_0 : 1; 
  uint64 room_0909_0 : 1; 
  uint64 room_1015_0 : 1; 
  uint64 room_1109_0 : 1; 
  uint64 room_1210_0 : 1; 
  uint64 room_1308_0 : 1; 
  uint64 room_1403_0 : 1; 
  uint64 room_1414_0 : 1; 

  uint64 room_1507_0 : 1; 
  uint64 room_1615_0 : 1; 
  uint64 room_1807_0 : 1; 
  uint64 room_1808_0 : 1; 
  uint64 room_1909_0 : 1; 
} SquirrelData <comment="Room coordinates are yx_id not xy_id">;

typedef struct
{
    ushort Unknown : 1;
    ushort Firecrackers : 1;
    ushort Flute : 1;
    ushort Lantern : 1;
    ushort Top : 1;
    ushort Disc : 1;
    ushort BWand : 1;
    ushort Yoyo : 1;
    ushort Slink : 1;
    ushort Remote : 1;
    ushort Ball : 1;
    ushort Wheel : 1;
    ushort UVLight : 1;
} Equipment <optimize=false>;

typedef struct
{
    ubyte Unknown1 : 1;
    ubyte Unknown2 : 1;
    ubyte UnknownButUsed : 1;
    ubyte BBwand : 1;
    ubyte Unknown5 : 1;
    ubyte Unknown6 : 1;
    ubyte Unknown7 : 1;
    ubyte Unknown8 : 1;
} Equipment2;


typedef struct
{
    ubyte None : 1;
    ubyte SMedal : 1;
    ubyte UnknownItem1 : 1;
    ubyte HouseKey : 1;
    ubyte OfficeKey : 1;
    ubyte UnusedCageKey : 1;
    ubyte EMedal : 1;
    ubyte FPack : 1;
} OtherItems <optimize=false>;

typedef struct
{
    ubyte None : 1;
    ubyte Map : 1;
    ubyte Stamp : 1;
    ubyte Pencil : 1;
    ubyte Unknown1 : 1;
    ubyte CRing : 1;
    ubyte Unknown2 : 1;
    ubyte Unknown3 : 1;
} AuxularyItem <optimize=false>;


typedef struct
{
    ubyte StopWatch : 1;
    ubyte Pedometer : 1;
    ubyte UnkUnlockable : 1;
    ubyte SouvenirCup : 1;
    ubyte OrigamiFig : 1;
    ubyte Rabbits : 1;
    ubyte Owl : 1;
    ubyte DecorativeRabbit : 1;
    ubyte Fish : 1;
    ubyte Donkey : 1;
    ubyte Cat : 1;
    ubyte MamaCha : 1;
    ubyte Giraffe : 1;
    ubyte IncenseBurner : 1;
    ubyte Peacock : 1;
    ubyte Otter : 1;
    ubyte Duck : 1;
    ubyte Figurine18 : 1 <hidden=true>;
    ubyte Figurine19 : 1 <hidden=true>;
    ubyte Figurine20 : 1 <hidden=true>;
    ubyte Figurine21 : 1 <hidden=true>;
    ubyte Figurine22 : 1 <hidden=true>;
    ubyte Figurine23 : 1 <hidden=true>;
    ubyte Figurine24 : 1 <hidden=true>;
    ubyte Figurine25 : 1 <hidden=true>;
    ubyte Figurine26 : 1 <hidden=true>;
    ubyte Figurine27 : 1 <hidden=true>;
    ubyte Figurine28 : 1 <hidden=true>;
    ubyte Figurine29 : 1 <hidden=true>;
    ubyte Figurine30 : 1 <hidden=true>;
    ubyte Figurine31 : 1 <hidden=true>;
    ubyte Figurine32 : 1 <hidden=true>;
}  Figurines <optimize=false>;

// Header
typedef struct {
    uint32 Version <comment="Save file version">;
    AchievementData Achievements;
    uint32 UnknownData <hidden=true>; // what other shared state is saved?
    ubyte SelectedSaveSlot;
    ubyte SaveHash <write=WriteHash, comment="This needs to be updated every time before you load the file!">;
    ushort Unk <hidden=true>;  // always 00?
    Figurines Unlockables <comment="Both figurines and global items">;
    uint32 Reserved <hidden=true>; // seems to be reserved data
    
} Header <optimize=false>;

// Options

typedef struct {
    ubyte Scanlines : 1;
    ubyte Fullscreen : 1;
    ubyte ShowTime : 1;
    ubyte ShowSteps : 1;
    ubyte Vibration : 1;
    ubyte UnknownOption : 1;
    ubyte Flashing : 1;
    ubyte OverrideStyle : 1;
    ubyte SwapCancel : 1;
    ubyte IgnoreBGInput : 1;
    ubyte UnknownOption2 : 1;
    Language Lang;
    ubyte Unk[5] <hidden=true>;
    float SFX;
    float Music;
    ControllerStyle GamepadStyle;
    Graphics GFX;
    ubyte Unk2[38] <hidden=true>;
} Options <optimize=false>;


// SLOTS

typedef struct {
    ushort Year;
    ubyte Month;
    ubyte Day;
    ubyte Hour;
    ubyte Minutes;
    ubyte Seconds;
    ubyte Unknown <hidden=true>;
} Timestamp <optimize=false>;


typedef struct {
    uint32 X;
    uint32 Y;
} SavedPos <optimize=false>;


typedef struct {
    ubyte FullMapRow[100] <comment="Whole world row, starting from right, each room is 5 bytes, each bit is one tile/pixel, total 40 horizontal tiles/pixesl per room">;
} MinimapRow <optimize=false>;


typedef struct {
    MinimapRow GridRoomRow[22] <comment="22 full world rows, denoting height of a room">;
} MinimapRowsData <optimize=false>;


enum <ushort> StampType
{
    Chest = 0,
    Heart,
    Skull,
    Diamond,
    Spiral,
    Flame,
    Grid,
    Question
};


typedef struct
{
    ushort X;
    ushort Y;
    StampType Stamp;
} StampEntry <optimize=false>;


typedef struct
{
    ubyte TotalStamps;
    StampType LastSelected;
    StampEntry PlacedStamps[64];
} StampData <optimize=false>;


typedef struct (uint32 bytelen) {
    ubyte pad[bytelen];
} RemainingFill;
    

typedef struct (ubyte slot)
{
    Timestamp SlotTime <bgcolor=0xFFD2EE, read=Str("%u:%u:%u %u.%u.%u", this.Hour, this.Minutes, this.Seconds,  this.Day, this.Month, this.Year)>;
    //----
    Cranks CrankLevelsPerRoom;
    ubyte  Unk1[88]  <hidden=true>;
    KeyDoorData KeyDoors <comment="Ordering is unknown">;
    ubyte  Unk2[104]  <hidden=true>;
    uint32 Steps  <bgcolor=0xFFD2EE>;
    FillData FillLevels;
    // --
    ubyte  Unk3[15]  <hidden=true>;
    ChestData OpenedChests;
    ButtonDoorsData ButtonDoors;
    // --
    YellowButtonData YellowButtons;
    ubyte  Unk4[8]  <hidden=true>;
    PurpleButtonData PurpleButtons;
    GreenButtonData GreenButtons;
    // --
    FruitData PickedFuits;
    FirecrackerData PickedFCrackers;
    EggData Eggs;
    ExplosionData Explosions;
    DetonatorData Detonators;
    BunnyData Bunnies;
    SquirrelData SpookedSquirrels;
    uint32 Unk5  <hidden=true>;
    // --
    ushort TimesSaved;
    ubyte pad5[8]  <hidden=true>;
    ubyte Matches  <bgcolor=0xD2FFD6>;
    ubyte FireCrackers <bgcolor=0xD2FFD6>;
    uint32 Hearts  <bgcolor=0xFFD2EE>;
    uint32 Unk5;
    uint32 TicksIngame  <bgcolor=0xFFD2EE>;
    uint32 TicksTotal  <bgcolor=0xFFD2EE>;
    ubyte pad6[16] <hidden=true>;
    SavedPos SavedRoomPos <bgcolor=0xCACAFF, read=Str("[%u, %u]", this.X, this.Y)>;    
    Equipment OwnedEquipment <bgcolor=0xD2FFD6>;
    OtherItems Items1 <bgcolor=0xD2FFD6>;
    ubyte pad7[3] <hidden=true>;
    ushort DeathsUnk <bgcolor=0xFFD2EE, comment="This updates along with death counter, but the relation is not known">;
    ushort Deaths <bgcolor=0xFFD2EE>;
    ubyte pad8[4] <hidden=true>;
    ubyte SelectedItem <bgcolor=0xD2FFD6>;
    ushort Unk <hidden=true>;
    AuxularyItem AuxularyItems <bgcolor=0xD2FFD6>;
    Equipment2 Upgrades <bgcolor=0xD2FFD6>;
    ubyte pad9[54] <hidden=true>;
    StampData PlacedStamps <read=Str("%u", this.TotalStamps)>; // 387 bytes
    ubyte DynamicDataThatConstantlyUpdates[64] <hidden=true>;
    uint32 UnknownData <hidden=true>;
    MinimapRowsData RevealedMapData[24];
    ubyte Unused <hidden=true>;
    MinimapRowsData PencilMapData[24];
    ubyte Unused <hidden=true>; // do we need it?
    MinimapRowsData TileStateData[24] <comment="Deleted/erased static tiles">;
    RemainingFill unknown(GetRemainingSlotPadding(slot)) <hidden=true, bgcolor=0x919191>;
} Slot <optimize=false>;

// =====================
// FUNCTIONS
// =====================

uint32 GetRemainingSlotPadding(ubyte slot) {
    return (24 + (159760 * slot)) - FTell();
}

ubyte CalculateHash()
{
    local ubyte total = 0;
    local uint32 pos = 0;
    while (pos <= 12) {
        total = total ^ ReadUByte(pos);
        pos++;
    }
    pos = 14;
    while (pos < FileSize()) {
        total = total ^ ReadUByte(pos);
        pos++;
    }
    Printf("Save hash: %d", total);
    return total;
}

void WriteHash(ubyte &b, string s) { b = CalculateHash(); }

uint32 numberOfSetBits(uint32 i)
{
     i = i - ((i >> 1) & 0x55555555);
     i = (i & 0x33333333) + ((i >> 2) & 0x33333333);
     i = (i + (i >> 4)) & 0x0F0F0F0F;
     i *= 0x01010101;
     return  i >> 24;
}


// =====================
// PARSING
// =====================

// Because Slot data is incomplete we parse manually for now
Header GlobalState <bgcolor=0xCACAFF>;
Assert(GlobalState.Version == 9, "Unsupported version detected");
Slot Slot1(1) <bgcolor=0xD2F2FF>;
Slot Slot2(2) <bgcolor=0xFFF2D2>;
Slot Slot3(3) <bgcolor=0xD2FFF8>;
Options Config <bgcolor=0xFFD2EE>;
